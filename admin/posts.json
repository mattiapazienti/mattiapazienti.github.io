[
{"id":0,"slug":"first-chars-on-codekod","date":"<b>22<\/b> Nov 2013 ","category":"updates","title":"First chars on codekod","text":"It's never easy to start from a blank page, however, this is my latest effort, Codekod, where I collect some useful resources from the web and for the web, in form of code and text. Codekod is built on part with Backbone and Javascript, all posts are loaded by calls from a JSON file that itself comes from a textfile converted with Fledr CMS.<br><br>You can find more about Fledr on the <b>projects<\/b> section of this site and on github.<br><br>"},
{"id":1,"slug":"awesome-icons-from-iconmonstr","date":"<b>22<\/b> Nov 2013 ","category":"resources","title":"Awesome icons from iconmonstr","text":"Search and customize thousands of icons, download them in svg or png. Iconmonstr is a useful website for designers and developers.<br><br><a target=\"_blank\" title=\"Iconmonstr\" href=\"http:\/\/iconmonstr.com\/\">Iconmonstr<\/a><br>"},
{"id":2,"slug":"load-and-display-data-from-json","date":"<b>23<\/b> Nov 2013 ","category":"js","title":"Load and display data from JSON","text":"A simple script to retrieve data from a JSON file with Ajax call and display it on the page:<br><br><h5><font face=\"courier new\">&nbsp;&nbsp;&nbsp; loadData = function () {<\/font><\/h5><h5><font face=\"courier new\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; var that = this;<\/font><\/h5><h5><font face=\"courier new\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; $.ajaxSetup({ cache: false });<\/font><\/h5><h5><font face=\"courier new\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; $.getJSON(\"file.json\", function(data){ <\/font><\/h5><h5><font face=\"courier new\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; var item = [];<\/font><\/h5><h5><font face=\"courier new\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \/* loop through array *\/<\/font><\/h5><h5><font face=\"courier new\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; $.each(data, function(index, f){&nbsp;&nbsp; <\/font><\/h5><h5><font face=\"courier new\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; title = f.title;<\/font><\/h5><h5><font face=\"courier new\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; text = f.text;<\/font><\/h5><h5><font face=\"courier new\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; item.push(\"&lt;article&gt;&lt;h1&gt;\" + title + \"&lt;\/h1&gt;&lt;p&gt;\" + text + \"&lt;\/p&gt;&lt;\/article&gt;\" );<\/font><\/h5><h5><font face=\"courier new\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; });<\/font><\/h5><h5><font face=\"courier new\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; $(\"body\").html('&lt;div&gt;&lt;\/div&gt;' + item.join(''));<\/font><\/h5><h5><font face=\"courier new\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; });<\/font><\/h5><h5><font face=\"courier new\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; };<\/font><\/h5><span><br><\/span><span>This is an example working with a JSON file containing keys for title and text, retrieving data from file.json stored in the same folder of the script\/page. <br><\/span><span>The script need however jQuery.<\/span><span><br><\/span>"},
{"id":3,"slug":"mediaqueries-working-on-ie8-7-with-respondjs","date":"<b>23<\/b> Nov 2013 ","category":"resources","title":"Mediaqueries working on IE8-7 with RespondJS","text":"A must have plugin when working with responsive design, this plugin created by Scott Jehl provide support for media queries (min and max width) to Explorer 8 and earlier, check out the project on github:<br><br><a target=\"_blank\" title=\"Respond JS\" href=\"https:\/\/github.com\/scottjehl\/Respond\">Respond.min.js<\/a><br><br><br>"},
{"id":4,"slug":"responsive-video","date":"<b>23<\/b> Nov 2013 ","category":"css","title":"Responsive video","text":"Few lines of CSS will give a fluid layout to your videos, from both desktop and mobile:<br>Consider most of the videos have a 16\/9 ratio, we use padding instead of height to display properly our videos.<br><br>First we need to set the height of <b>html <\/b>and <b>body <\/b>to 100%, then we create a container div for our video (html5 or flash) with this markup:<br><br><h5><font face=\"courier new\"><div class=\"container\"><\/div><\/font><\/h5><br>The associated stylesheet should be:<br><br><h5><font face=\"courier new\">.container {<\/font><\/h5><h5><font face=\"courier new\">position: relative; <\/font><\/h5><h5><font face=\"courier new\">width: 100%; \/* assuming it into an element with given measures *\/<\/font><\/h5><h5><font face=\"courier new\">height: 0; <\/font><\/h5><h5><font face=\"courier new\">padding-bottom: 56.25%; <\/font><\/h5><h5><font face=\"courier new\">overflow: hidden<\/font><\/h5><h5><font face=\"courier new\">}<\/font><\/h5><span><br><\/span><span>In case of a flash embedded video we should style it:<\/span><span><br><br><\/span><h5><font face=\"courier new\">.container embed,<br>.container object {<br>position: absolute;<br>top: 0;<br>left: 0;<br>width: 100% !important;<br>height: auto;&nbsp; \/* 100% here should also be ok *\/<br>}<\/font><\/h5><span><br><\/span><span>For HTML5 videos the stylesheet should contain the same markup:<\/span><span><br><br><\/span><h5><font face=\"courier new\">.container video {<br>position: absolute;<br>top: 0;<br>left: 0;<br>width: 100% !important;<br>height: 100% !important;<br>}<\/font><\/h5><span><br><\/span><span><br><\/span>"},
{"id":5,"slug":"all-device-widths-from-screensizes","date":"<b>24<\/b> Nov 2013 ","category":"resources","title":"All device widths from screensiz.es","text":"A table with all screen sizes from different devices, tablets, desktop, mobile, with the sorting feature to check the most common on the market, check out:<br><br><a target=\"_blank\" title=\"Screen Sizes\" href=\"http:\/\/screensiz.es\/phone\">screensiz.es<\/a><br><br><br>"},
{"id":6,"slug":"animations-with-svg-by-lazylinepainter","date":"<b>25<\/b> Nov 2013 ","category":"resources","title":"Animations with SVG by lazylinepainter","text":"To use this awesome resource you should create a vector file with a single non breaking line, drawing a line, a logo or other artwork with just a single level\/element.<br><br>Follow the instructions on Lazylinepainter.info and get an animated SVG to include with a canvas on your site:<br><br><a target=\"_blank\" title=\"Lazy Line Painter\" href=\"http:\/\/lazylinepainter.info\/\">Lazylinepainter<\/a><br>"},
{"id":7,"slug":"basic-html5-support-for-ie8-","date":"<b>30<\/b> Nov 2013 ","category":"js","title":"Basic HTML5 support for IE8-","text":"These few lines of code will let Explorer 8 read HTML5 markup, as for example headers, footers, video, article and so on...<div><br><h5><font face=\"courier new\"><span class=\"p\">(<\/span><span class=\"kd\" style=\"font-weight: bold;\">function<\/span> <span class=\"p\">()<\/span> <span class=\"p\">{<br><\/span><\/font><font face=\"courier new\">&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"k\" style=\"font-weight: bold;\">if<\/span> <span class=\"p\">(<\/span><span class=\"o\" style=\"font-weight: bold;\">!<\/span> <span class=\"cm\" style=\"color: rgb(153, 153, 136); font-style: italic;\">\/*@cc_on!@*\/<\/span> <span class=\"mi\" style=\"color: rgb(0, 153, 153);\">0<\/span><span class=\"p\">)<\/span> <span class=\"k\" style=\"font-weight: bold;\">return<\/span><span class=\"p\">;<br><\/span><\/font><font face=\"courier new\">&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"kd\" style=\"font-weight: bold;\">var<\/span> <span class=\"nx\">e<\/span> <span class=\"o\" style=\"font-weight: bold;\">=<\/span> <span class=\"s2\" style=\"color: rgb(221, 17, 68);\">\"abbr,article,aside,audio,bb,canvas,datagrid,<\/span><\/font><\/h5><h5><font face=\"courier new\"><span class=\"s2\" style=\"color: rgb(221, 17, 68);\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;datalist,details,dialog,eventsource,figure,figcaption,<\/span><\/font><\/h5><h5><font face=\"courier new\"><span class=\"s2\" style=\"color: rgb(221, 17, 68);\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;footer,header,hgroup,mark,menu,meter,nav,output,progress,<\/span><\/font><\/h5><h5><font face=\"courier new\"><span class=\"s2\" style=\"color: rgb(221, 17, 68);\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;section,time,video,source\"<\/span><span class=\"p\">.<\/span><span class=\"nx\">split<\/span><span class=\"p\">(<\/span><span class=\"s1\" style=\"color: rgb(221, 17, 68);\">','<\/span><span class=\"p\">);<br><\/span><\/font><font face=\"courier new\">&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"k\" style=\"font-weight: bold;\">for<\/span> <span class=\"p\">(<\/span><span class=\"kd\" style=\"font-weight: bold;\">var<\/span> <span class=\"nx\">i<\/span> <span class=\"o\" style=\"font-weight: bold;\">=<\/span> <span class=\"mi\" style=\"color: rgb(0, 153, 153);\">0<\/span><span class=\"p\">;<\/span> <span class=\"nx\">i<\/span> <span class=\"o\" style=\"font-weight: bold;\">&lt;<\/span> <span class=\"nx\">e<\/span><span class=\"p\">.<\/span><span class=\"nx\">length<\/span><span class=\"p\">;<\/span> <span class=\"nx\">i<\/span><span class=\"o\" style=\"font-weight: bold;\">++<\/span><span class=\"p\">)<\/span> <span class=\"p\">{<br><\/span><\/font><font face=\"courier new\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"nb\" style=\"color: rgb(0, 134, 179);\">document<\/span><span class=\"p\">.<\/span><span class=\"nx\">createElement<\/span><span class=\"p\">(<\/span><span class=\"nx\">e<\/span><span class=\"p\">[<\/span><span class=\"nx\">i<\/span><span class=\"p\">]);<br><\/span><\/font><font face=\"courier new\">&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"p\">}<br><\/span><\/font><span class=\"p\"><font face=\"courier new\">})();<\/font><\/span><\/h5><div><span class=\"p\"><font face=\"courier new\"><br><\/font><\/span><\/div>Remember to target IE8 when running this script, with &lt;!--[if IE8]&gt;<br><\/div>"},
{"id":8,"slug":"detect-mobile-user-agent","date":"<b>30<\/b> Nov 2013 ","category":"js","title":"Detect mobile user agent","text":"Simple script, and perhaps not up do date, to detect mobile and tablet devices and attach a mobile class to body (could be also a div or other).<div><br><\/div><div><h5><font face=\"courier new\">var target = document.getElementsByTagName('body');<br>var check = {any:function(){<\/font><\/h5><h5><font face=\"courier new\">&nbsp; &nbsp;return navigator.userAgent.match(\/Android|BlackBerry|iPhone|iPad|iPod|Opera Mini|IEMobile\/i);<\/font><\/h5><h5><font face=\"courier new\">}};<br>if(check.any())target.setAttribute('class','mobile');<\/font><\/h5><\/div><div><br><\/div><div>The list of devices in this function include anyway the most common.<br><\/div>"},
{"id":9,"slug":"json-converter-available-for-fledr-cms","date":"<b>30<\/b> Nov 2013 ","category":"updates","title":"Json converter available for Fledr CMS","text":"As pointed out on Github, Fledr CMS comes now with a new feature, it converts your posts to json format and stores them in a single file, posts.json in the \/admin folder.<div>After creating or editing a post you can export it to json with one click operation from the json section of Fledr.<\/div><div><br><\/div><div>This feature gives you a lightweight and useful format with two addictions, a slug for the title and a post ID.<\/div><div>Check out the projects section of this site or go to <a href=\"https:\/\/github.com\/codekod\/\" title=\"CODEKOD on github\" target=\"_blank\">github<\/a> to read further.<\/div>"},
{"id":10,"slug":"awesome-js-updates-from-dailyjs","date":"<b>30<\/b> Nov 2013 ","category":"resources","title":"Awesome JS updates from dailyjs","text":"I've been following the guys from DailyJS for a while now, by far the best resource for developers, here's the link:<div><br><\/div><div><a href=\"http:\/\/dailyjs.com\" title=\"DailyJS\" target=\"_blank\">DailyJS<\/a><\/div>"},
{"id":11,"slug":"font-sizing-with-rem","date":"<b>01<\/b> Dec 2013 ","category":"css","title":"Font sizing with rem","text":"<span>With CSS3 a new feature for font sizing is available, keeping in mind that em are relative to a parent element, the root related rem can sometimes be a wise choice,<\/span><div><span>in the following example we set the html's font size to 62,5% having the perfect match between pixels and em\/rem:<\/span><\/div><div><span><br><\/span><\/div><h5><font face=\"courier new\"><span>html {font-size:62.5%}<br><\/span><span>body {font-size:1.6rem} \/* same as 16px *\/<br><\/span>h4 {font-size:1.4rem} \/* same as 14px *\/<br>p {font-size:1.2rem} \/* same as 12px *\/<\/font><\/h5><div><br><\/div><div>Eventually fallback for IE8 and lower:<\/div><div><br><\/div><div><h5><font face=\"courier new\">html {font-size:62.5%}<br>body {font-size:16px; font-size:1.6rem}<\/font><\/h5><\/div><div><br><\/div>"},
{"id":12,"slug":"php-script-to-encode-json-format","date":"<b>02<\/b> Dec 2013 ","category":"php","title":"PHP script to encode JSON format","text":"When supported (PHP 4+) using json encode is quite simple, given a number of strings (say title, text, category...) there are just two lines of code to return a well formatted json string, here's the markup:<br><br><h5><font face=\"courier new\">$arr = array('date' =&gt; $date, 'category' =&gt; $category, 'title' =&gt; $title, 'text' =&gt; $text);<\/font><\/h5><h5><font face=\"courier new\">$data = json_encode($arr);<\/font><\/h5><span><br><\/span><span>Where $arr is a new array of keys and values, in this example we suppose a date, a category, title and text (could be a post, or data from a book or a movie). <br><\/span><span>$data returns a json encoded format of the new array when also html tags are included and rendered in frontend without interfering with your json markup.<br><\/span>"},
{"id":13,"slug":"font-icons-from-font-awesome","date":"<b>03<\/b> Dec 2013 ","category":"resources","title":"Font icons from Font Awesome","text":"Font Awesome deliver icons as font packages, suitable for Bootstrap and everywhere you need them.&nbsp;<div>They just need a selected class in your code to show up, and of course are scalable!<\/div><div><br><\/div><div>Here's the link to <a href=\"http:\/\/fontawesome.io\/\" title=\"FontAwesome\" target=\"_blank\">Font Awesome<\/a>.<\/div>"},
{"id":14,"slug":"backbonejs-dynamic-routing","date":"<b>04<\/b> Dec 2013 ","category":"js","title":"BackboneJS dynamic routing","text":"Now available on the github page of Codekod, a quick yet basic example of dynamic routes from collection with BackboneJS.<div>First we include in our html file the required scripts:<br><br><h5><font face=\"courier new\">&lt;script src=\"js\/jquery.1.8.2.min.js\" type=\"text\/javascript\"&gt;&lt;\/script&gt; &nbsp; &nbsp; &nbsp; &nbsp;<br>&lt;script src=\"js\/underscore.min.js\" type=\"text\/javascript\"&gt;&lt;\/script&gt;<br>&lt;script src=\"js\/backbone.min.js\" type=\"text\/javascript\"&gt;&lt;\/script&gt;<br>&lt;script src=\"js\/app.js\" type=\"text\/javascript\"&gt;&lt;\/script&gt;<\/font><\/h5><\/div><div><font face=\"courier new\"><br><\/font><\/div><div>The body of our file should include:<\/div><div><br><\/div><div><h5><font face=\"courier new\">&lt;div class=\"viewport\" style=\"margin:20px\"&gt;&nbsp;<br>&nbsp; &nbsp; &lt;div class=\"content\"&gt;&lt;\/div&gt;<br>&nbsp; &nbsp; &lt;div class=\"stat\"&gt;&lt;\/div&gt;<br>&lt;\/div&gt;<br>&lt;script type=\"text\/template\" id=\"template\"&gt;<br>&nbsp; &nbsp; &lt;strong&gt;&lt;%= name %&gt;&lt;\/strong&gt; (&lt;%= number %&gt;) - &lt;%= position %&gt; - &lt;button id=\"&lt;%= number %&gt;\" class=\"btn btn-default btn-sm\"&gt;view stats&lt;\/button&gt;<br>&lt;\/script&gt;<\/font><\/h5><\/div><div><br><\/div><div>We compile in js\/app.js where we run all of our backbone app:<br><\/div><div><br><\/div><div><h5><font face=\"courier new\">var Player = Backbone.Model.extend({<br>defaults: {<br>&nbsp; &nbsp; name: 'default',<br>&nbsp; &nbsp; position: 'default',<br>&nbsp; &nbsp; number: 0<br>}<br>});<\/font><\/h5><\/div><div><br><\/div><div>We now have a new model \"Player\", yes, we're going to list the starting eleven of Barcelona FC.<font face=\"courier new\"><br><\/font><\/div><div>We need now a collection:<\/div><div><br><\/div><div><h5><font face=\"courier new\">var Team = Backbone.Collection.extend({<br>&nbsp; &nbsp; model: Player<br>});<\/font><\/h5><\/div><div><br><\/div><div>So we now can include our players, a simple list of objects:<\/div><div><br><\/div><div><h5><font face=\"courier new\">var Team = new Team([<br>&nbsp; &nbsp; &nbsp; &nbsp; {<br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; name: 'Lionel Messi',<br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; position: 'forward',<br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; number: 10<br>&nbsp; &nbsp; &nbsp; &nbsp; },<br>&nbsp; &nbsp; &nbsp; &nbsp; {<br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; name: 'Neymar',<br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; position: 'forward',<br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; number: 11<br>&nbsp; &nbsp; &nbsp; &nbsp; },<br>&nbsp; &nbsp; &nbsp; &nbsp; {<br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; name: 'Andres Iniesta',<br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; position: 'midfielder',<br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; number: 8<br>&nbsp; &nbsp; &nbsp; &nbsp; },<br>&nbsp; &nbsp; &nbsp; &nbsp; {<br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; name: 'Xavi',<br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; position: 'midfielder',<br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; number: 6<br>&nbsp; &nbsp; &nbsp; &nbsp; },<br>&nbsp; &nbsp; &nbsp; &nbsp; {<br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; name: 'Cesc Fabregas',<br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; position: 'midfielder',<br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; number: 4<br>&nbsp; &nbsp; &nbsp; &nbsp; },<br>&nbsp; &nbsp; &nbsp; &nbsp; {<br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; name: 'Ibrahim Afellay',<br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; position: 'midfielder',<br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; number: 19<br>&nbsp; &nbsp; &nbsp; &nbsp; },<br>&nbsp; &nbsp; &nbsp; &nbsp; {<br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; name: 'Carles Puyol',<br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; position: 'back',<br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; number: 5<br>&nbsp; &nbsp; &nbsp; &nbsp; },<br>&nbsp; &nbsp; &nbsp; &nbsp; {<br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; name: 'Gerard Pique',<br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; position: 'back',<br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; number: 3<br>&nbsp; &nbsp; &nbsp; &nbsp; },<br>&nbsp; &nbsp; &nbsp; &nbsp; {<br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; name: 'Jordi Alba',<br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; position: 'back',<br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; number: 18<br>&nbsp; &nbsp; &nbsp; &nbsp; },<br>&nbsp; &nbsp; &nbsp; &nbsp; {<br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; name: 'Martin Montoya',<br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; position: 'back',<br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; number: 2<br>&nbsp; &nbsp; &nbsp; &nbsp; },<br>&nbsp; &nbsp; &nbsp; &nbsp; {<br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; name: 'Victor Valdes',<br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; position: 'goalkeeper',<br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; number: 1<br>&nbsp; &nbsp; &nbsp; &nbsp; } &nbsp; &nbsp;&nbsp;<br>&nbsp;]);<\/font><\/h5><\/div><div><br><\/div><div>Here's the view for all team players:<\/div><div><br><\/div><div><h5><font face=\"courier new\">var TeamView = Backbone.View.extend({<br>&nbsp; &nbsp; tagName: 'ul',<br>&nbsp; &nbsp; className: 'list',<br>&nbsp; &nbsp; events: {<br>&nbsp; &nbsp; &nbsp; \"click button\" : \"openStats\"<br>&nbsp; &nbsp; },<br>&nbsp; &nbsp; render: function(){<br>&nbsp; &nbsp; &nbsp; &nbsp; this.collection.each(function(player){<br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; var playerView = new PlayerView({ model: player });<br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; this.$el.append(playerView.render().el);&nbsp;<br>&nbsp; &nbsp; &nbsp; &nbsp; }, this);<br>&nbsp; &nbsp; &nbsp; &nbsp; return this;&nbsp;<br>&nbsp; &nbsp; },<br>&nbsp; &nbsp; openStats: function (event) {<br>&nbsp; &nbsp; &nbsp; e = event.target.id;<br>&nbsp; &nbsp; &nbsp; Router.navigate('stats\/' + e + '\/', { trigger: true });<br>&nbsp; &nbsp; }<br>});<\/font><\/h5><\/div><div><font face=\"courier new\"><br><\/font><\/div><div><div>Now we create a view for each player:<\/div><\/div><div><br><\/div><div><h5><font face=\"courier new\">&nbsp;var PlayerView = Backbone.View.extend({<br>&nbsp; &nbsp; &nbsp; &nbsp; tagName: 'li',<br>&nbsp; &nbsp; &nbsp; &nbsp; template: _.template($('#template').html()),<br>&nbsp; &nbsp; &nbsp; &nbsp; render: function(){<br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; this.$el.html( this.template(this.model.toJSON()));<br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; return this;&nbsp;<br>&nbsp; &nbsp; &nbsp; &nbsp; }<br>&nbsp;});<\/font><\/h5><\/div><div><br><\/div><div>The following code is just an example, it runs when we match a route with a player number:<\/div><div><br><\/div><div><h5><font face=\"courier new\">StatsView = function () {<br>&nbsp; &nbsp; $(\".stat\").html('&lt;h2&gt;Stats for player number ' + e + ' &lt;\/h2&gt;');<br>};<\/font><\/h5><\/div><div><font face=\"courier new\"><br><\/font><\/div><div><font face=\"courier new\"><br><\/font><\/div><div><div>We quickly setup the page:<\/div><\/div><div><br><\/div><div><h5><font face=\"courier new\">var teamView = new TeamView({ collection: Team });<br>$(document.body).append(teamView.render().el);<\/font><\/h5><\/div><div><font face=\"courier new\"><br><\/font><\/div><div>Now, here's a static route for index and a dynamic route for each player, *actions is just a placeholder for the triggered event, button's ID in this example:<font face=\"courier new\"><br><\/font><\/div><div><br><\/div><div><h5><font face=\"courier new\">var Router = Backbone.Router.extend({<br>&nbsp; &nbsp; routes: {<br>&nbsp; &nbsp; &nbsp; &nbsp; '(\/)': 'index',<br>&nbsp; &nbsp; &nbsp; &nbsp; 'stats\/*actions\/': 'stats'<br>&nbsp; &nbsp; },<br>&nbsp; &nbsp; stats: function() { &nbsp;<br>&nbsp; &nbsp; &nbsp; &nbsp; StatsView(e);<br>&nbsp; &nbsp; }<br>});<\/font><\/h5><\/div><div><font face=\"courier new\"><br><\/font><\/div><div>Backbone history needs to be initiated:<font face=\"courier new\"><br><\/font><\/div><div><font face=\"courier new\"><br><\/font><\/div><div><span style=\"font-size: 0.8em; font-family: 'courier new';\">var Router = new Router;<\/span><br><\/div><div><font face=\"courier new\"><h5>Backbone.history.start({ pushState: true });<\/h5><\/font><\/div>"},
{"id":15,"slug":"css3-animations","date":"<b>04<\/b> Dec 2013 ","category":"css","title":"CSS3 Animations","text":"CSS3 Animations are available for IE10+, Firefox, Opera and webkit browsers like Chrome and Safari:<div><br><\/div><div>A simple animation is shown here:<\/div><div><br><\/div><h5><font face=\"courier new\"><span style=\"color: rgb(0, 0, 0); font-size: 14px; background-color: rgb(255, 255, 255);\">@keyframes myanimation<br><\/span><\/font><font face=\"courier new\"><span style=\"color: rgb(0, 0, 0); font-size: 14px; background-color: rgb(255, 255, 255);\">{<br><\/span><\/font><font face=\"courier new\"><span style=\"color: rgb(0, 0, 0); font-size: 14px; background-color: rgb(255, 255, 255);\">0%&nbsp;&nbsp; {background: black;}<\/span><\/font><font face=\"courier new\"><span style=\"color: rgb(0, 0, 0); font-size: 14px; background-color: rgb(255, 255, 255);\"><br><\/span><\/font><font face=\"courier new\"><span style=\"color: rgb(0, 0, 0); font-size: 14px; background-color: rgb(255, 255, 255);\">50%&nbsp; {background: red;}<br><\/span><\/font><font face=\"courier new\"><span style=\"color: rgb(0, 0, 0); font-size: 14px; background-color: rgb(255, 255, 255);\">100% {background: yellow;}<br><\/span><\/font><font face=\"courier new\"><span style=\"color: rgb(0, 0, 0); font-size: 14px; background-color: rgb(255, 255, 255);\">}<\/span><\/font><\/h5><div><font face=\"courier new\"><span style=\"color: rgb(0, 0, 0); font-size: 14px; background-color: rgb(255, 255, 255);\"><br><\/span><\/font><\/div><div>This animation could be requested as follow:<font face=\"courier new\"><span style=\"color: rgb(0, 0, 0); font-size: 14px; background-color: rgb(255, 255, 255);\"><br><\/span><\/font><\/div><div><br><\/div><h5><font face=\"courier new\"><span style=\"color: rgb(0, 0, 0); font-size: 14px; background-color: rgb(255, 255, 255);\">animation-name: myanimation;<br><\/span><span style=\"color: rgb(0, 0, 0); font-size: 14px; background-color: rgb(255, 255, 255);\">animation-duration: 10s;<br><\/span><span style=\"color: rgb(0, 0, 0); font-size: 14px; background-color: rgb(255, 255, 255);\">animation-timing-function: linear;<br><\/span><span style=\"color: rgb(0, 0, 0); font-size: 14px; background-color: rgb(255, 255, 255);\">animation-delay: 1s;<br><\/span><span style=\"color: rgb(0, 0, 0); font-size: 14px; background-color: rgb(255, 255, 255);\">animation-iteration-count: infinite;<br><\/span><span style=\"color: rgb(0, 0, 0); font-size: 14px; background-color: rgb(255, 255, 255);\">animation-direction: alternate;<br><\/span><span style=\"color: rgb(0, 0, 0); font-size: 14px; background-color: rgb(255, 255, 255);\">animation-play-state: running;<\/span><\/font><\/h5><div><font face=\"courier new\"><span style=\"color: rgb(0, 0, 0); font-size: 14px; background-color: rgb(255, 255, 255);\"><br><\/span><\/font><\/div><div>Commonly we need just a few, to animate a div:<font face=\"courier new\"><span style=\"color: rgb(0, 0, 0); font-size: 14px; background-color: rgb(255, 255, 255);\"><br><\/span><\/font><\/div><div><br><\/div><div><h5><font face=\"courier new\"><span style=\"background-color: rgb(255, 255, 255);\"><font color=\"#000000\"><span style=\"font-size: 14px;\">div {animation: myanimation 2s ease-out 0s infinite}<\/span><\/font><\/span><br><\/font><\/h5><\/div><div><font face=\"courier new\"><span style=\"color: rgb(0, 0, 0); font-size: 14px; background-color: rgb(255, 255, 255);\"><br><\/span><\/font><\/div><div>We can change transition of course, ease-out is just one of these:<font face=\"courier new\"><span style=\"color: rgb(0, 0, 0); font-size: 14px; background-color: rgb(255, 255, 255);\"><br><\/span><\/font><\/div><div><br><\/div><div><h5><font face=\"courier new\">cubic-bezier(0.57,0,0.13,1)<\/font><\/h5><pre><br><\/pre><pre><span style=\"font-family: 'Noto Sans', Helvetica, Arial, sans-serif; white-space: normal;\">Transitions can rely on cubic bezier's parametric curve, hence different styles are available, more can be found (and made) here:<\/span><br><\/pre><pre><span style=\"font-family: 'Noto Sans', Helvetica, Arial, sans-serif; white-space: normal;\"><br><\/span><\/pre><pre><span style=\"font-family: 'Noto Sans', Helvetica, Arial, sans-serif; white-space: normal;\"><a href=\"http:\/\/cubic-bezier.com\/#.17,.67,.83,.67\" title=\"Cubic Bezier\" target=\"_blank\">cubic-bezier.com<\/a><\/span><\/pre><\/div>"},
{"id":16,"slug":"not-only-hexadecimal","date":"<b>04<\/b> Dec 2013 ","category":"resources","title":"Not only hexadecimal","text":"Yep, I have to admit it, when developing css it's never easy to remeber a specific color for fonts or backgrounds, of course most of this is solved by using LESS or SASS, but recently I really like to use simple color names instead, with flat design becoming a trend I sometimes rely on this solution, color names are available anywhere, here's a link to a handy palette:<div><br><\/div><div><a href=\"http:\/\/html-color-codes.info\/color-names\/\" title=\"Color Names\" target=\"_blank\">html-color-names<\/a><\/div>"},
{"id":17,"slug":"simple-demo-with-angularjs","date":"<b>05<\/b> Dec 2013 ","category":"js","title":"Simple demo with Angularjs","text":"Handle data from json with Angular is easy but, with recent releases (1.2.0 in this example), not all type of contents are correctly and easily displayed due to security concerns, for example, html and other tags will not be rendered on frontend and so on, unless some extra code.<div><br><\/div><div>In this example we have plain text data from json and we use ng-repeat to display all of it (and for each key).<\/div><div><br><\/div><div><h5><font face=\"courier new\">&lt;script type=\"text\/javascript\" src=\"https:\/\/ajax.googleapis.com\/ajax\/libs\/angularjs\/1.2.0\/angular.min.js\"&gt;&lt;\/script&gt;<\/font><\/h5><div><br><\/div><div>Once AngularJS has been included, from cdn or local, we start coding our app:<\/div><\/div><div><br><\/div><div><h5><font face=\"courier new\">function movieController($http,$scope){<br>&nbsp; &nbsp; $http.get('movies.json').success(function(movies) {<br>&nbsp; &nbsp; &nbsp; &nbsp; $scope.data = movies;<br>&nbsp; &nbsp; });<br>}<\/font><\/h5><\/div><div><br><\/div><div>With $http.get the json file is loaded, it's data is included in the controller as a new $scope.<\/div><div>In our html file we can compile as follow:<\/div><div><br><\/div><div><h5><font face=\"courier new\">&lt;div ng-controller=\"movieController\"&gt;<br><\/font><font face=\"courier new\"><span class=\"Apple-tab-span\" style=\"white-space:pre\">\t<\/span>&lt;ul&gt;<span class=\"Apple-tab-span\" style=\"white-space:pre\">\t<br><\/span><\/font><font face=\"courier new\"><span class=\"Apple-tab-span\" style=\"white-space:pre\">\t\t<\/span>&lt;li ng-repeat=\"d in data\"&gt;<br><\/font><font face=\"courier new\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &lt;h2&gt;{{d.title}}&lt;\/h2&gt;<br><\/font><font face=\"courier new\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &lt;time&gt;{{d.year}}&lt;\/time&gt;<br><\/font><font face=\"courier new\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &lt;small&gt;{{d.category}}&lt;\/small&gt;<br><\/font><font face=\"courier new\"><span class=\"Apple-tab-span\" style=\"white-space:pre\">\t\t<\/span>&lt;\/li&gt;<br><\/font><font face=\"courier new\"><span class=\"Apple-tab-span\" style=\"white-space:pre\">\t<\/span>&lt;\/ul&gt;<br><\/font><font face=\"courier new\">&lt;\/div&gt;<\/font><\/h5><\/div><div><br><\/div><div>We use d for keys, the json file looks like this:<\/div><div><br><\/div><div><h5><font face=\"courier new\">[<br>&nbsp; &nbsp; {\"title\":\"the hangover part 2\",\"year\":\"2011\",\"category\":\"comedy\"},<br>&nbsp; &nbsp; {\"title\":\"thor\",\"year\":\"2011\",\"category\":\"fiction\"},<br>&nbsp; &nbsp; {\"title\":\"life of pi\",\"year\":\"2012\",\"category\":\"adventure\"}<br>]<\/font><\/h5><\/div><div><br><\/div><div>This example is available from codekod's <a href=\"https:\/\/github.com\/codekod\/\" title=\"github\" target=\"_blank\">github<\/a><\/div>"},
{"id":18,"slug":"css3-gradients-with-gradient-generator","date":"<b>05<\/b> Dec 2013 ","category":"resources","title":"CSS3 Gradients with gradient generator","text":"Linear, radial gradients, gradients with more than two colors, with CSS3 all of this is possible, and even easier with gradient generators, this one works perfectly:<div><br><\/div><div><a href=\"http:\/\/www.css3factory.com\/linear-gradients\/\" title=\"Gradient Generator\" target=\"_blank\">CSS Gradient Generator.<\/a><\/div>"},
{"id":19,"slug":"jquery-migrate-plugin-for-jquery-19","date":"<b>07<\/b> Dec 2013 ","category":"js","title":"Jquery migrate plugin for jquery +1.9","text":"A useful plugin to detect obsolete API's and features in JQuery 1.9.0 (and newer).&nbsp;<div>It's available from the jquery github page:<\/div><div><br><\/div><div><a href=\"https:\/\/github.com\/jquery\/jquery-migrate\" title=\"Jquery Migrate\" target=\"_blank\">jquery\/migrate<\/a><\/div>"},
{"id":20,"slug":"css-box-sizing-width-is-width","date":"<b>07<\/b> Dec 2013 ","category":"css","title":"CSS box-sizing, width is width","text":"This is not a brand new feature, but it's worthy to write it down as a reminder, it works nicely using IE8+, webkit browsers and firefox (-moz prefix still required).<div>For IE7- compatibility polyfills are required (check&nbsp;http:\/\/html5please.us\/#box-sizing).<\/div><div><br><\/div><div>So, box-sizing gives you real width box models, even if you set padding to 20px your 100px div will still be 100px (and not 140):<\/div><div><br><\/div><div><h5><font face=\"courier new\">*, *:before, *:after { -moz-box-sizing: border-box; -webkit-box-sizing: border-box; box-sizing: border-box; }<\/font><\/h5><p class=\"p1\"><br><\/span><p class=\"p1\">So your 100px wide element will create padding inwards only:<\/span><p class=\"p1\"><br><\/span><h5><font face=\"courier new\">div {width:100px; padding:20px}<\/font><\/h5><p class=\"p1\"><br><\/span><p class=\"p1\">That's all, quite simple and safe.<\/span><\/div><div><br><\/div><div><br><\/div>"},
{"id":21,"slug":"screen-size-label-","date":"<b>09<\/b> Dec 2013 ","category":"js","title":"Screen size label ","text":"When working on a responsive web app it's useful to know the exact width of the screen, although some plugins for chrome\/firefox could be installed, this is a quick script to use:<div><br><\/div><div><h5><font face=\"courier new\">function onresize()<br>{<br><span class=\"Apple-tab-span\" style=\"white-space:pre\">\t<\/span>screensize = Math.ceil($(window).width()) + 18;<br>&nbsp; &nbsp; &nbsp; &nbsp; $('body').append(\"&lt;div style='position:fixed; top:0; right:0; background:#f00; z-index:4000; padding:2px; font-size:11px'&gt;\" + screensize + \"&lt;div&gt;\");<br>}<\/font><\/h5><div><br><\/div><div>Function called on window resize:<\/div><div><br><\/div><h5><font face=\"courier new\">\/\/ event trigger<br>$(window).bind(\"resize\", function() {<br><span class=\"Apple-tab-span\" style=\"white-space:pre\">\t<\/span>onresize();<br>});<\/font><\/h5><\/div><div><br><\/div><div>This script returns the screen width, with + 18 a scrollbar width is included, just remove it if a scrollbar is not required.<\/div><div><br><\/div>"},
{"id":22,"slug":"a-well-documented-and-stable-php-plugin-for-thumbs","date":"<b>10<\/b> Dec 2013 ","category":"php","title":"A well documented and stable php plugin for thumbs","text":"Stable and well documented plugin for thumb resizing in php projects,<b> phpThumb<\/b>, once loaded it just needs some parameters in the image src url, for resizing, cropping, watermarks and more options:<div><br><\/div><h5><font face=\"courier new\">&lt; img src=\"http:\/\/'. $_SERVER['HTTP_HOST'] .'\/phpThumb\/phpThumb.php?src=\/'. $project_dir .'\/data\/img\/album\/'. $gallery .'\/'. $image[$i][2].'&amp;h='.$height.'&amp;w='.$width.'\"\" alt=\"'. $image[$i][3] .'\" &gt;<\/font><\/h5><div><br><\/div><div>In this example we search the image in<i> \/phpThumb\/phpThumb.php?src=<\/i> with desired width and height for thumb image, in frontend something like this:<\/div><div><i><br><\/i><\/div><h5><font face=\"courier new\">http:\/\/www.yoursite.com\/phpThumb\/phpThumb.php?src=\/demo\/data\/img\/album\/cars\/volvo_480.png&amp;h=100&amp;w=100<\/font><\/h5><div><br><\/div><div>More examples and documentation available here:<\/div><div><br><\/div><div><a href=\"http:\/\/phpthumb.sourceforge.net\/\" title=\"phpThumb\" target=\"_blank\">phpThumb<\/a><\/div><div><br><\/div>"},
{"id":23,"slug":"jquery-smart-banner-","date":"<b>12<\/b> Dec 2013 ","category":"js","title":"jQuery smart banner ","text":"A useful plugin for jQuery created by Jasny to display app banners on top of websites when browsed from mobile, working well with android, iphone and windows.<div>When loading the script you should edit on line 20 to make the plugin compatible with iOS7, changing &lt; 6 to &lt; 7 (If there's no new versions available for the plugin).<\/div><div><br><\/div><div>So this line:<br><br><h5><font face=\"courier new\">window.Number(navigator.userAgent.substr(navigator.userAgent.indexOf('OS ') + 3, 3).replace('_', '.')) &lt; 6)) this.type = 'ios' \/\/ Check webview and native smart banner support (iOS 6+)<\/font><\/h5><\/div><div><br><\/div><div>Should be:<br><br><h5><font face=\"courier new\">window.Number(navigator.userAgent.substr(navigator.userAgent.indexOf('OS ') + 3, 3).replace('_', '.')) &lt; 7)) this.type = 'ios' \/\/ Check webview and native smart banner support (iOS 7+)<\/font><\/h5><\/div><div><font face=\"courier new\"><br><\/font><\/div><div>Plugin available here:<br><\/div><div><br><\/div><div><a href=\"http:\/\/jasny.github.io\/jquery.smartbanner\/\" title=\"smartBanner\" target=\"_blank\">Jasny-SmartBanner<\/a><\/div><div><br><\/div>"},
{"id":24,"slug":"a-cdn-for-all-your-libraries","date":"<b>12<\/b> Dec 2013 ","category":"resources","title":"A cdn for all your libraries","text":"Cdnjs.com hosts a huge variety of libraries of any kind, from JS to SWF, powered by cloudflare the delivery is fast and very safe,<br><div>here's the link to cdnjs:<\/div><div><br><\/div><div><a href=\"http:\/\/cdnjs.com\/\" title=\"CDNjs\" target=\"_blank\">CDNJS.COM<\/a><\/div>"},
{"id":25,"slug":"simple-css-clearfix","date":"<b>13<\/b> Dec 2013 ","category":"css","title":"Simple CSS Clearfix","text":"When floating elements renders out of the parent element and overflow:hidden (on parent) is not the choosen solution clearfix comes in help, it's a simple trick and has been around for a while now, it works with :before and :after pseudo elements, so instead of using overflow:hidden on parent element we just can attach a class styled with these rules:<br><br><h5><font face=\"courier new\">.cf:before,<br>.cf:after {<br>&nbsp; &nbsp; content:\"\";<br>&nbsp; &nbsp; display:table;<br>}<br>.cf:after {<br>&nbsp; &nbsp; clear:both;<br>}<br>.cf {<br>&nbsp; &nbsp; zoom: 1;<br>}<\/font><\/h5><div><br><\/div><div>Useful if we consider this html:<\/div><div><br><\/div><h5><font face=\"courier new\">&lt;div class=\"content cf\"&gt;<br>&nbsp; &nbsp; &lt;article&gt;&lt;\/article&gt;<br>&nbsp; &nbsp; &lt;aside&gt;&lt;\/aside&gt;<br>&lt;\/div&gt;<\/font><\/h5><div><br><\/div><div>Where aside is floating left\/right.<\/div><div><br><\/div>"},
{"id":26,"slug":"advent-calendar-for-web-geeks","date":"<b>13<\/b> Dec 2013 ","category":"resources","title":"Advent calendar for web geeks","text":"Starting from December the 1st and each day until Christmas 24ways.org share web and design resources, check out:<div><br><\/div><div><a href=\"http:\/\/24ways.org\/\" title=\"24ways\" target=\"_blank\">24ways.org&nbsp;<\/a><\/div>"},
{"id":27,"slug":"responsivedesignis-modern-design-in-a-nutshell","date":"<b>13<\/b> Dec 2013 ","category":"resources","title":"Responsivedesign.is, modern design in a nutshell","text":"Responsivedesign.is features a lot of know-how and tricks for flexible design, from images to typography, check out:<div><br><\/div><div><a href=\"http:\/\/responsivedesign.is\/\" title=\"Responsivedesign.is\" target=\"_blank\">Responsivedesign.is<\/a><\/div>"},
{"id":28,"slug":"simple-pseudo-hover-for-touch-devices","date":"<b>13<\/b> Dec 2013 ","category":"js","title":"Simple pseudo hover for touch devices","text":"Simple and very basic script that allows users to get the hover effect of the link, when a second event is triggered the link navigates to the selected page.<div>JQuery is required to run this script:<\/div><div><br><\/div><div><h5><font face=\"courier new\">(function ($) {<br>&nbsp; &nbsp;var check = {any:function(){<br>&nbsp; &nbsp; &nbsp; &nbsp;return navigator.userAgent.match(\/Android|BlackBerry|iPhone|iPad|iPod|Opera Mini|IEMobile\/i);<br>&nbsp; &nbsp;}};<br>&nbsp; &nbsp;if(check.any()) {<br>&nbsp; &nbsp; &nbsp; &nbsp; lnt = $(\".tch\");<br>&nbsp; &nbsp; &nbsp; &nbsp; lnt.bind(\"click.a\", function(event) {<br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; event.preventDefault();<br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; $(this).unbind(\".a\");<br>&nbsp; &nbsp; &nbsp; &nbsp; });<br>&nbsp; &nbsp; &nbsp; &nbsp; lnt.click(function(e) {<br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;if ($(this).hasClass('focus')) {<br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;$(this).removeClass('focus');<br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;} else {<br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;$(this).addClass('focus');<br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;}<br>&nbsp; &nbsp; &nbsp; &nbsp; });<br>&nbsp; &nbsp;};<br>})(jQuery);<\/font><\/h5><\/div><div><br><\/div><div>For this example a custom class \"tch\" is used, so for a link just add the class as follows:<\/div><div><br><\/div><div><h5><font face=\"courier new\">&lt;div class=\"cont\"&gt;<br>&nbsp; &nbsp;&lt;a href=\"\/about\/\" class=\"tch\"&gt;about&lt;\/a&gt;<br>&lt;\/div&gt;<\/font><\/h5><\/div><div><br><\/div><div>Stylesheet as follows:<\/div><div><br><\/div><div><h5><font face=\"courier new\">.cont &gt; a {background:#333; padding:5px; display:inline-block; color:#fff; text-decoration:none; font-size:14px; margin:10px; transition: all 120ms ease-out}<br>.cont &gt; a:hover, .cont &gt; a.focus {background:DarkCyan; padding-right:10px}<\/font><\/h5><\/div><div><br><\/div><div>Example available from codekod's github.<br><\/div><div><br><\/div>"},
{"id":29,"slug":"responsejs-mobile-first-jquery-plugin","date":"<b>18<\/b> Dec 2013 ","category":"resources","title":"ResponseJS, mobile-first jquery plugin","text":"A well documented and stable plugin for jquery that helps you with you responsive yet mobile-first project, providing different breakpoints and different features for image loads and screen size, dive into it and read more here:<div><br><\/div><div><a href=\"http:\/\/responsejs.com\/\">r<\/a>esponsejs.com<br><\/div>"},
{"id":30,"slug":"sharrre-flexible-sharing-plugin","date":"<b>18<\/b> Dec 2013 ","category":"resources","title":"Sharrre, flexible sharing plugin","text":"Add share buttons and customize them with few lines of code, an all-shares counter is also available:<br><br><div><a href=\"http:\/\/sharrre.com\/\" title=\"Sharre\" target=\"_blank\">sharrre.com<\/a><br><\/div>"},
{"id":31,"slug":"special-mention-awarded-to-codekod-by-awwwards","date":"<b>18<\/b> Dec 2013 ","category":"updates","title":"Special Mention awarded to codekod by Awwwards","text":"With a total score of 7.65!&nbsp;<div><br><\/div><div><a href=\"http:\/\/www.awwwards.com\/best-websites\/codekod-com\" title=\"Awwwwards\" target=\"_blank\">codekod on awwwards<\/a><\/div>"},
{"id":32,"slug":"knwljs-an-intelligent-text-scanner","date":"<b>02<\/b> Jan 2014 ","category":"resources","title":"Knwljs, an intelligent text scanner","text":"&nbsp;Knwljs by loadfive scans phone numbers, dates, locations, emails, times, and more, checking if the string may be spam, or get the overall emotion. It's a small and young library available from loadfive's github:<br><div><br><\/div><div><a href=\"https:\/\/github.com\/loadfive\/Knwl.js\" title=\"Knwljs\" target=\"_blank\">loadfive\/knwljs<\/a><\/div>"},
{"id":33,"slug":"show-menu-on-swipe-upward","date":"<b>02<\/b> Jan 2014 ","category":"js","title":"Show menu on swipe upward","text":"Just like safari on iOS7 I'm working on a lightweight script to show the user menu (or other elements) when swiping upward on touch devices, so far tested on iPhone loaded with iOS7, it's available on codekod's github:<div><br><\/div><div><a href=\"https:\/\/github.com\/codekod\/swipe-menu-mobile\" title=\"SwipeUp Menu\" target=\"_blank\">codekod @github<\/a><\/div>"},
{"id":34,"slug":"appliness-free-digital-mag-for-developers","date":"<b>21<\/b> Jan 2014 ","category":"resources","title":"Appliness, free digital mag for developers","text":"Appliness is an amazing app-zine about web and apps, ranging from node.js to html5, it's free and available for android and ios tablets as well as in .pdf format:<div><br><\/div><div>Check out <a href=\"http:\/\/www.appliness.com\/download\/\" title=\"Appliness\" target=\"_blank\">Appliness<\/a><\/div>"},
{"id":35,"slug":"jquery-lazy-load-images-whenever","date":"<b>21<\/b> Jan 2014 ","category":"resources","title":"jQuery Lazy, load images whenever","text":"Useful plugin to load images at or after a certain time, or a certain event.<div>The code below will load 'em after 5 seconds:<\/div><div><br><\/div><div><h5><font face=\"courier new\">jQuery(document).ready(function() {<br><\/font><font face=\"courier new\">&nbsp; &nbsp; jQuery(\"img.lazy\").lazy({<br><\/font><font face=\"courier new\">&nbsp; &nbsp; &nbsp; &nbsp; delay: 5000<br><\/font><font face=\"courier new\">&nbsp; &nbsp; });<br><\/font><font face=\"courier new\">});<\/font><\/h5><\/div><div><br><\/div><div>More options are available, check out:<\/div><div><br><\/div><div><a href=\"http:\/\/jquery.eisbehr.de\/lazy\/\" title=\"jQuery Lazy\" target=\"_blank\">jQuery Lazy<\/a><\/div><div><br><\/div>"},
{"id":36,"slug":"fast-reset-for-modern-browsers","date":"<b>04<\/b> Feb 2014 ","category":"css","title":"Fast reset for modern browsers","text":"<div>This is one of my favorite css resets, with some parts as a must have and other parts as a personal project related reset:<\/div><div><br><\/div><h5><font face=\"courier new\">*{padding:0;margin:0;list-style:none;border:0;outline:none}<\/font><\/h5><h5><font face=\"courier new\">*,*:before,*:after {-moz-box-sizing: border-box;-webkit-box-sizing: border-box;box-sizing: border-box;}<br><\/font><font face=\"courier new\">html, body {height:100%}<br><\/font><font face=\"courier new\">input[type=\"submit\"] {cursor:pointer; -webkit-appearance:none;}<br><\/font><font face=\"courier new\">article, aside, details, figcaption, figure, footer, header, hgroup, nav, section, summary {display: block;}<br><\/font><font face=\"courier new\">a:focus {outline: thin dotted;}<br><\/font><font face=\"courier new\">a:active, a:hover {outline: 0;}<br><\/font><font face=\"courier new\">button,input,select,textarea {font-size: 100%; vertical-align: baseline; *vertical-align: middle; font-family: Helvetica, Arial, Sans-serif;}<br><\/font><font face=\"courier new\">input[type=\"search\"] {-webkit-appearance: textfield; -moz-box-sizing: content-box; -webkit-box-sizing: content-box; box-sizing: content-box;}<br><\/font><font face=\"courier new\">img {vertical-align: middle;}<br><\/font><font face=\"courier new\">button,input {line-height: normal;}<\/font><\/h5><div><br><\/div><div>More css rules could help with clearfix tricks and overflow problems.<\/div>"},
{"id":37,"slug":"css-custom-checkboxes","date":"<b>06<\/b> Feb 2014 ","category":"css","title":"CSS custom checkboxes","text":"Valid also for radio inputs as well, this css will customize inputs via image sprites:<div><br><\/div><div><h5><font face=\"courier new\">.checkbox {position:relative;line-height:22px;margin-bottom:10px;cursor:pointer}<br>.checkbox * {cursor:pointer}<br>.checkbox:not(#foo) &gt; input[type=\"checkbox\"] {position:absolute;width:22px;height:22px;overflow:hidden;margin:0;padding:0;border:0;outline:0;opacity:0;}<br>.checkbox:not(#foo) &gt; input[type=\"checkbox\"] + label:before {content:\" \";display:inline-block;width:22px;height:22px;margin-right:5px;<span class=\"Apple-tab-span\" style=\"white-space:pre\">\t<\/span>background:url('http:\/\/www.codekod.com\/projects\/cb\/checkboxes.png') no-repeat;vertical-align:top;}<br>.checkbox:not(#foo) &gt; input[type=\"checkbox\"] + label:before {background-position:0 0;}<br>.checkbox:not(#foo) &gt; input[type=\"checkbox\"]:focus + label:before {background-position:0 0;}<br>.checkbox:not(#foo) &gt; input[type=\"checkbox\"]:checked + label:before {background-position:0 -36px;}<br>.checkbox:not(#foo) &gt; input[type=\"checkbox\"]:checked:focus + label:before {background-position:0 -36px;}<br>.checkbox:not(#foo) &gt; input[type=\"checkbox\"]:checked + label {color:#1b7cb1;font-weight:bold;}<\/font><\/h5><\/div><div><br><\/div><div>Given this html:<br><br><\/div><div><h5><font face=\"courier new\">&lt;form id=\"form\" name=\"form\" method=\"post\" action=\"\" class=\"my_form\"&gt;<br>&nbsp; &nbsp; &lt;div class=\"checkbox\"&gt;&lt;input type=\"checkbox\" id=\"r1\" name=\"\" value=\"r1\" \/&gt;&lt;label for=\"r1\"&gt;label for one&lt;\/label&gt;&lt;\/div&gt;<br>&nbsp; &nbsp; &lt;div class=\"checkbox\"&gt;&lt;input type=\"checkbox\" id=\"r2\" name=\"\" value=\"r1\" \/&gt;&lt;label for=\"r2\"&gt;label for two&lt;\/label&gt;&lt;\/div&gt;<br>&nbsp; &nbsp; &lt;div class=\"checkbox\"&gt;&lt;input type=\"checkbox\" id=\"r3\" name=\"\" value=\"r1\" \/&gt;&lt;label for=\"r3\"&gt;label for three&lt;\/label&gt;&lt;\/div&gt;<br>&nbsp; &nbsp; &lt;div class=\"checkbox\"&gt;&lt;input type=\"checkbox\" id=\"r4\" name=\"\" value=\"r1\" \/&gt;&lt;label for=\"r4\"&gt;label for four&lt;\/label&gt;&lt;\/div&gt; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<br>&lt;\/form&gt;<\/font><\/h5><\/div><div><br><\/div><div>Also available on github!<\/div><div><br><\/div>"},
{"id":38,"slug":"codio-online-ide","date":"<b>08<\/b> May 2014 ","category":"resources","title":"Codio, online IDE","text":"I am currently enjoying Codio, an online IDE with a lot of features, on top of these the push to github function, ideal to keep synced your project and repo.<div>Codio supports lots of markup languages and can be used as dynamic development tool.<\/div><div><br><\/div><div><a href=\"http:\/\/www.codio.com\" title=\"Codio\" target=\"_blank\">Check out!<\/a><\/div>"},
{"id":39,"slug":"fittextjs-a-jquery-plugin-for-inflating-web-type","date":"<b>08<\/b> May 2014 ","category":"resources","title":"FitText.js, a jQuery plugin for inflating web type","text":"FitText.js is a jQuery plugin (by Davatron5000) that allows your web type to change size as the screen resizes, a maximum and minimum font-size can be set as well as a transform ratio.<div><br><\/div><div><a href=\"https:\/\/github.com\/davatron5000\/FitText.js\" title=\"FitText\" target=\"_blank\">Check out!<\/a><\/div>"},
{"id":40,"slug":"simplinfo-collection-of-html5-examples","date":"<b>03<\/b> Jul 2014 ","category":"resources","title":"simpl.info, collection of html5 examples","text":"Simple yet quite complete list of basic html5 snippets by Sam Dutton, including various mobile device test cases.<div><br><\/div><div>Find out more at <a href=\"http:\/\/www.simpl.info\/\" title=\"Simpl\" target=\"_blank\">simple.info<\/a><\/div>"},
{"id":41,"slug":"css-triangles-with-border-style","date":"<b>03<\/b> Jul 2014 ","category":"css","title":"CSS triangles with border style","text":"A single div to recreate basic triangles:<div><br><\/div><h5><font face=\"courier new\"><span style=\"color: rgb(0, 0, 0); font-size: 13px;\">&lt;div class=\"triangle-top\"&gt;&lt;\/div&gt;<br><\/span><span style=\"color: rgb(0, 0, 0); font-size: 13px;\"><div\u00a0class=\"triangle-bottom\"><\/div\u00a0class=\"triangle-bottom\"><\/span><\/font><\/h5><h5><font face=\"courier new\"><span style=\"color: rgb(0, 0, 0);\">&lt;div class=\"triangle-right\"&gt;&lt;\/div&gt;<\/span><\/font><\/h5><div><h5><font face=\"courier new\"><span style=\"color: rgb(0, 0, 0);\">&lt;div class=\"triangle-bottom\"&gt;&lt;\/div&gt;<\/span><\/font><\/h5><\/div><div><h5><font face=\"courier new\"><span style=\"color: rgb(0, 0, 0);\">&lt;div class=\"triangle-left\"&gt;&lt;\/div&gt;<\/span><\/font><\/h5><\/div><h5><font face=\"courier new\"><span style=\"color: rgb(0, 0, 0); font-size: 13px;\"><div\u00a0class=\"triangle-left\"><\/div\u00a0class=\"triangle-left\"><\/span><span style=\"color: rgb(0, 0, 0); font-size: 13px;\"><\/span><span style=\"color: rgb(0, 0, 0); font-size: 13px;\">&nbsp;<br><\/span><span style=\"color: rgb(0, 0, 0); font-size: 13px;\"><div\u00a0class=\"triangle-right\"><\/div\u00a0class=\"triangle-right\"><\/span><span style=\"color: rgb(0, 0, 0); font-size: 13px;\"><\/span><\/font><\/h5><div><font face=\"courier new\"><span style=\"color: rgb(0, 0, 0); font-size: 13px;\"><br><\/span><\/font><\/div><div>And then styling this way:<font face=\"courier new\"><span style=\"color: rgb(0, 0, 0); font-size: 13px;\"><br><\/span><\/font><\/div><div><br><\/div><h5><font face=\"courier new\"><span style=\"color: rgb(0, 0, 0); font-size: 13px;\">.triangle-top <\/span><span style=\"color: rgb(0, 0, 0); font-size: 13px;\">{<\/span><span style=\"color: rgb(0, 0, 0); font-size: 13px;\">&nbsp;<br><\/span><\/font><font face=\"courier new\"><span style=\"color: rgb(0, 0, 0); font-size: 13px;\">&nbsp; width<\/span><span style=\"color: rgb(0, 0, 0); font-size: 13px;\">:<\/span><span style=\"color: rgb(0, 0, 0); font-size: 13px;\">&nbsp;0<\/span><span style=\"color: rgb(0, 0, 0); font-size: 13px;\">;<\/span><span style=\"color: rgb(0, 0, 0); font-size: 13px;\">&nbsp;<br><\/span><\/font><font face=\"courier new\"><span style=\"color: rgb(0, 0, 0); font-size: 13px;\">&nbsp; height<\/span><span style=\"color: rgb(0, 0, 0); font-size: 13px;\">:<\/span><span style=\"color: rgb(0, 0, 0); font-size: 13px;\">&nbsp;0<\/span><span style=\"color: rgb(0, 0, 0); font-size: 13px;\">;<\/span><span style=\"color: rgb(0, 0, 0); font-size: 13px;\">&nbsp;<br><\/span><\/font><font face=\"courier new\"><span style=\"color: rgb(0, 0, 0); font-size: 13px;\">&nbsp; border-left<\/span><span style=\"color: rgb(0, 0, 0); font-size: 13px;\">:<\/span><span style=\"color: rgb(0, 0, 0); font-size: 13px;\">&nbsp;8px solid transparent<\/span><span style=\"color: rgb(0, 0, 0); font-size: 13px;\">;<\/span><span style=\"color: rgb(0, 0, 0); font-size: 13px;\">&nbsp;<br><\/span><\/font><font face=\"courier new\"><span style=\"color: rgb(0, 0, 0); font-size: 13px;\">&nbsp; border-right<\/span><span style=\"color: rgb(0, 0, 0); font-size: 13px;\">:<\/span><span style=\"color: rgb(0, 0, 0); font-size: 13px;\">&nbsp;8px solid transparent<\/span><span style=\"color: rgb(0, 0, 0); font-size: 13px;\">;<\/span><span style=\"color: rgb(0, 0, 0); font-size: 13px;\">&nbsp;<br><\/span><\/font><font face=\"courier new\"><span style=\"color: rgb(0, 0, 0); font-size: 13px;\">&nbsp; border-bottom<\/span><span style=\"color: rgb(0, 0, 0); font-size: 13px;\">:<\/span><span style=\"color: rgb(0, 0, 0); font-size: 13px;\">&nbsp;8px solid #0F8282<\/span><span style=\"color: rgb(0, 0, 0); font-size: 13px;\">;<br><\/span><\/font><font face=\"courier new\"><span style=\"color: rgb(0, 0, 0); font-size: 13px;\">&nbsp;<\/span><span style=\"color: rgb(0, 0, 0); font-size: 13px;\">}<\/span><span style=\"color: rgb(0, 0, 0); font-size: 13px;\">&nbsp;<\/span><\/font><span style=\"color: rgb(0, 0, 0); font-size: 13px;\"><font face=\"courier new\"><br><\/font><\/span><font face=\"courier new\"><span style=\"color: rgb(0, 0, 0); font-size: 13px;\">.<\/span><span style=\"color: rgb(0, 0, 0); font-size: 13px;\">triangle<\/span><span style=\"color: rgb(0, 0, 0); font-size: 13px;\">-bottom&nbsp;<\/span><span style=\"color: rgb(0, 0, 0); font-size: 13px;\">{<\/span><span style=\"color: rgb(0, 0, 0); font-size: 13px;\">&nbsp;<br><\/span><\/font><font face=\"courier new\"><span style=\"color: rgb(0, 0, 0); font-size: 13px;\">&nbsp; width<\/span><span style=\"color: rgb(0, 0, 0); font-size: 13px;\">:<\/span><span style=\"color: rgb(0, 0, 0); font-size: 13px;\">&nbsp;0<\/span><span style=\"color: rgb(0, 0, 0); font-size: 13px;\">;<\/span><span style=\"color: rgb(0, 0, 0); font-size: 13px;\">&nbsp;<br><\/span><\/font><font face=\"courier new\"><span style=\"color: rgb(0, 0, 0); font-size: 13px;\">&nbsp; height<\/span><span style=\"color: rgb(0, 0, 0); font-size: 13px;\">:<\/span><span style=\"color: rgb(0, 0, 0); font-size: 13px;\">&nbsp;0<\/span><span style=\"color: rgb(0, 0, 0); font-size: 13px;\">;<br><\/span><\/font><font face=\"courier new\"><span style=\"color: rgb(0, 0, 0); font-size: 13px;\">&nbsp; border-left<\/span><span style=\"color: rgb(0, 0, 0); font-size: 13px;\">:<\/span><span style=\"color: rgb(0, 0, 0); font-size: 13px;\">&nbsp;8px solid transparent<\/span><span style=\"color: rgb(0, 0, 0); font-size: 13px;\">;<\/span><span style=\"color: rgb(0, 0, 0); font-size: 13px;\">&nbsp;<br><\/span><\/font><font face=\"courier new\"><span style=\"color: rgb(0, 0, 0); font-size: 13px;\">&nbsp; border-right<\/span><span style=\"color: rgb(0, 0, 0); font-size: 13px;\">:<\/span><span style=\"color: rgb(0, 0, 0); font-size: 13px;\">&nbsp;8px solid transparent<\/span><span style=\"color: rgb(0, 0, 0); font-size: 13px;\">;<\/span><span style=\"color: rgb(0, 0, 0); font-size: 13px;\">&nbsp;<br><\/span><\/font><font face=\"courier new\"><span style=\"color: rgb(0, 0, 0); font-size: 13px;\">&nbsp; border-top<\/span><span style=\"color: rgb(0, 0, 0); font-size: 13px;\">:<\/span><span style=\"color: rgb(0, 0, 0); font-size: 13px;\">&nbsp;8px solid #<\/span><span style=\"color: rgb(0, 0, 0); font-size: 13px;\">0F8282<\/span><span style=\"color: rgb(0, 0, 0); font-size: 13px;\">;<br><\/span><\/font><font face=\"courier new\"><span style=\"color: rgb(0, 0, 0); font-size: 13px;\">&nbsp;<\/span><span style=\"color: rgb(0, 0, 0); font-size: 13px;\">}<\/span><span style=\"color: rgb(0, 0, 0); font-size: 13px;\">&nbsp;<\/span><\/font><span style=\"color: rgb(0, 0, 0); font-size: 13px;\"><font face=\"courier new\"><br><\/font><\/span><font face=\"courier new\"><span style=\"color: rgb(0, 0, 0); font-size: 13px;\">.<\/span><span style=\"color: rgb(0, 0, 0); font-size: 13px;\">triangle<\/span><span style=\"color: rgb(0, 0, 0); font-size: 13px;\">-right&nbsp;<\/span><span style=\"color: rgb(0, 0, 0); font-size: 13px;\">{<br><\/span><\/font><font face=\"courier new\"><span style=\"color: rgb(0, 0, 0); font-size: 13px;\">&nbsp;&nbsp;<\/span><span style=\"color: rgb(0, 0, 0); font-size: 13px;\">width<\/span><span style=\"color: rgb(0, 0, 0); font-size: 13px;\">:<\/span><span style=\"color: rgb(0, 0, 0); font-size: 13px;\">0<\/span><span style=\"color: rgb(0, 0, 0); font-size: 13px;\">;<\/span><span style=\"color: rgb(0, 0, 0); font-size: 13px;\">&nbsp;<br><\/span><\/font><font face=\"courier new\"><span style=\"color: rgb(0, 0, 0); font-size: 13px;\">&nbsp; height<\/span><span style=\"color: rgb(0, 0, 0); font-size: 13px;\">:<\/span><span style=\"color: rgb(0, 0, 0); font-size: 13px;\">&nbsp;0<\/span><span style=\"color: rgb(0, 0, 0); font-size: 13px;\">;<\/span><span style=\"color: rgb(0, 0, 0); font-size: 13px;\">&nbsp;<br><\/span><\/font><font face=\"courier new\"><span style=\"color: rgb(0, 0, 0); font-size: 13px;\">&nbsp; border-top<\/span><span style=\"color: rgb(0, 0, 0); font-size: 13px;\">:<\/span><span style=\"color: rgb(0, 0, 0); font-size: 13px;\">&nbsp;8px solid transparent<\/span><span style=\"color: rgb(0, 0, 0); font-size: 13px;\">;<\/span><span style=\"color: rgb(0, 0, 0); font-size: 13px;\">&nbsp;<br><\/span><\/font><font face=\"courier new\"><span style=\"color: rgb(0, 0, 0); font-size: 13px;\">&nbsp; border-bottom<\/span><span style=\"color: rgb(0, 0, 0); font-size: 13px;\">:<\/span><span style=\"color: rgb(0, 0, 0); font-size: 13px;\">&nbsp;8px solid transparent<\/span><span style=\"color: rgb(0, 0, 0); font-size: 13px;\">;<\/span><span style=\"color: rgb(0, 0, 0); font-size: 13px;\">&nbsp;<br><\/span><\/font><font face=\"courier new\"><span style=\"color: rgb(0, 0, 0); font-size: 13px;\">&nbsp; border-left<\/span><span style=\"color: rgb(0, 0, 0); font-size: 13px;\">:<\/span><span style=\"color: rgb(0, 0, 0); font-size: 13px;\">&nbsp;8px solid #<\/span><span style=\"color: rgb(0, 0, 0); font-size: 13px;\">0F8282<\/span><span style=\"color: rgb(0, 0, 0); font-size: 13px;\">;<br><\/span><\/font><font face=\"courier new\"><span style=\"color: rgb(0, 0, 0); font-size: 13px;\">&nbsp;<\/span><span style=\"color: rgb(0, 0, 0); font-size: 13px;\">}<\/span><\/font><span style=\"color: rgb(0, 0, 0); font-size: 13px;\"><font face=\"courier new\"><br><\/font><\/span><font face=\"courier new\"><span style=\"color: rgb(0, 0, 0); font-size: 13px;\">.<\/span><span style=\"color: rgb(0, 0, 0); font-size: 13px;\">triangle<\/span><span style=\"color: rgb(0, 0, 0); font-size: 13px;\">-left&nbsp;<\/span><span style=\"color: rgb(0, 0, 0); font-size: 13px;\">{<\/span><span style=\"color: rgb(0, 0, 0); font-size: 13px;\">&nbsp;<br><\/span><\/font><font face=\"courier new\"><span style=\"color: rgb(0, 0, 0); font-size: 13px;\">&nbsp; width<\/span><span style=\"color: rgb(0, 0, 0); font-size: 13px;\">:<\/span><span style=\"color: rgb(0, 0, 0); font-size: 13px;\">&nbsp;0<\/span><span style=\"color: rgb(0, 0, 0); font-size: 13px;\">;<\/span><span style=\"color: rgb(0, 0, 0); font-size: 13px;\">&nbsp;<br><\/span><\/font><font face=\"courier new\"><span style=\"color: rgb(0, 0, 0); font-size: 13px;\">&nbsp; height<\/span><span style=\"color: rgb(0, 0, 0); font-size: 13px;\">:<\/span><span style=\"color: rgb(0, 0, 0); font-size: 13px;\">&nbsp;0<\/span><span style=\"color: rgb(0, 0, 0); font-size: 13px;\">;<br><\/span><\/font><font face=\"courier new\"><span style=\"color: rgb(0, 0, 0); font-size: 13px;\">&nbsp; border-top<\/span><span style=\"color: rgb(0, 0, 0); font-size: 13px;\">:<\/span><span style=\"color: rgb(0, 0, 0); font-size: 13px;\">&nbsp;8px solid transparent<\/span><span style=\"color: rgb(0, 0, 0); font-size: 13px;\">;<\/span><span style=\"color: rgb(0, 0, 0); font-size: 13px;\">&nbsp;<br><\/span><\/font><font face=\"courier new\"><span style=\"color: rgb(0, 0, 0); font-size: 13px;\">&nbsp; border-bottom<\/span><span style=\"color: rgb(0, 0, 0); font-size: 13px;\">:<\/span><span style=\"color: rgb(0, 0, 0); font-size: 13px;\">&nbsp;8px solid transparent<\/span><span style=\"color: rgb(0, 0, 0); font-size: 13px;\">;<\/span><span style=\"color: rgb(0, 0, 0); font-size: 13px;\">&nbsp;<br><\/span><\/font><font face=\"courier new\"><span style=\"color: rgb(0, 0, 0); font-size: 13px;\">&nbsp; border-right<\/span><span style=\"color: rgb(0, 0, 0); font-size: 13px;\">:8<\/span><span style=\"color: rgb(0, 0, 0); font-size: 13px;\">px solid #<\/span><span style=\"color: rgb(0, 0, 0); font-size: 13px;\">0F8282;<br><\/span><\/font><font face=\"courier new\"><span style=\"color: rgb(0, 0, 0); font-size: 13px;\">&nbsp;<\/span><span style=\"color: rgb(0, 0, 0); font-size: 13px;\">}<\/span><\/font><\/h5><div><span style=\"color: rgb(0, 0, 0); font-family: Helvetica; font-size: 13px;\"><br><\/span><\/div><div><br><\/div><div><span style=\"color: rgb(0, 0, 0); font-family: Helvetica; font-size: 13px;\"><\/span><\/div>"}]